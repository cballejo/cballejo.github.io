---
pagetitle: "Documentos est√°ticos de Quarto¬Æ"
format: 
  revealjs:
    self-contained: true
    width: 1920
    height: 1080
    slide-number: true
    transition: fade
    theme: [simple, custom.scss]
    logo: logo_INE.PNG
    footer: "Instituto Nacional de Epidemiolog√≠a"
editor: source
bibliography: references.bib
---

```{r setup, include=F}
library(quarto)
library(fontawesome)
library(tidyverse)
```

```{r}
#| include: false
library(countdown)
countdown_timer <- function(
    minutes = 1, 
    play_sound = TRUE, 
    font_size = "2em", 
    ...
) {
  countdown(
    minutes = minutes,
    # Fanfare when it's over
    play_sound = play_sound,
    # Set timer theme to match solarized colors
    color_border              = "#404041",
    color_text                = "white",
    color_background = "#d78e1c",
    color_running_background  = "#72994E",
    color_running_text        = "white",
    color_finished_background = "#EE6331",
    color_finished_text       = "white",
    font_size = font_size,
    ...
  )
}
```

##  {#docu-estaticos-title data-menu-title="Documentos est√°ticos de Quarto¬Æ" background-image="images/maquina.webp" aria-label="Maquina de escribir"}

[Documentos est√°ticos de<br>Quarto¬Æ]{.custom-title .centrar}

[Encuentro 5<br>2024]{.custom-subtitle}

[Christian Ballejo]{.custom-author}

## Enlaces web {.title-top}

<br>

Existen varios tipos de "enlaces" o hiperv√≠nculos.

::: columns
::: {.column width="65%"}
**Markdown**

``` markdown
Se puede insertar [Quarto](https://quarto.org/), 
URL directas como <https://www.ine.gob.ar/> y 
enlaces a [otros lugares](#docu-estaticos-title) 
en el mismo documento. La sintaxis es similar a 
incrustar un imagen en l√≠nea: 
![Nombre](imagen.png). 
```
:::

::: {.column .fragment width="35%"}
**Salida**

Puede insertar [Quarto](https://quarto.org/), URL directas como <https://www.ine.gob.ar/> y enlaces a [otros lugares](#docu-estaticos-title) en el mismo documento. La sintaxis es similar a incrustar un imagen en l√≠nea: ![Logo INE](logo_INE.PNG){style="width:50px;"}.
:::
:::

## Listas {.title-top}

Listas sin orden:

::: columns
::: {.column width="50%"}
**Markdown:**

``` markdown
-   Lista sin orden       
    -   sub-item 1         
    -   sub-item 1         
        -   sub-sub-item 1 
```
:::

::: {.column .fragment width="50%" fragment-index="1"}
**Salida**

-   Lista sin orden
    -   sub-item 1\
    -   sub-item 1
        -   sub-sub-item 1
:::
:::

Listas ordenadas:

::: columns
::: {.column width="50%"}
**Markdown:**

``` markdown
1. Lista ordenada            
2. item 2                  
   i. sub-item 1          
      a.  sub-sub-item 1
```
:::

::: {.column .fragment width="50%" fragment-index="2"}
**Salida**

1.  Lista ordenada\
2.  item 2
    i.  sub-item 1
        a.  sub-sub-item 1
:::
:::

## Citas

<br>

**Markdown:**

``` markdown
> Cambiemos nuestra actitud tradicional hacia la construcci√≥n 
> de programas: en lugar de imaginar que nuestra tarea principal
> es indicarle a una computadora qu√© hacer, concentr√©monos m√°s
> bien en explicar a los seres humanos lo que queremos que haga
> una computadora. - Donald Knuth
```

. . .

<br>

**Salida:**

> Cambiemos nuestra actitud tradicional hacia la construcci√≥n de programas: en lugar de imaginar que nuestra tarea principal es indicarle a una computadora qu√© hacer, concentr√©monos m√°s bien en explicar a los seres humanos lo que queremos que haga una computadora. - Donald Knuth

::: aside
"Literate Programming", The Computer Journal 27 (1984), p. 97. (Reprinted in Literate Programming, 1992, p. 99.) Literate Programming (1984) <br> <br>
:::

## Tablas {.title-top}

Tablas Markdown

**Markdown:**

``` markdown
| Derecha | Izquierda | Predeterminado | Centrado |
|--------:|:----------|----------------|:--------:|
|    12   |    12     |       12       |    12    |
|   123   |   123     |      123       |   123    |
|     1   |     1     |        1       |     1    |
```

. . .

<br>

**Salida:**

| Derecha | Izquierda | Predeterminado | Centrado |
|--------:|:----------|----------------|:--------:|
|      12 | 12        | 12             |    12    |
|     123 | 123       | 123            |   123    |
|       1 | 1         | 1              |    1     |

## Tablas Grid (cuadr√≠cula) {.title-top}

Las tablas cuadr√≠cula son un tipo m√°s avanzado de tablas de Markdown que permiten otros elementos (m√∫ltiples p√°rrafos, bloques de c√≥digo, listas, etc.)

**Markdown:**

``` markdown
+---------------+---------------+--------------------+
| Formato       | Extensi√≥n     | Ventajas           |
+===============+===============+====================+
| Documento     | pdf           | - Seguro           |
| portable      |               | - Universal        |
+---------------+---------------+--------------------+
| Word          | docx          | - Editable         |
|               |               | - Universal        |
+---------------+---------------+--------------------+

: Ejemplo tabla cuadr√≠cula 
```

## Tablas Grid (cuadr√≠cula) {.title-top}

<br>

**Salida:**

<br>

+--------------------+----------------+----------------+
| Formato            | Extensi√≥n      | Ventajas       |
+====================+================+================+
| Documento portable | pdf            | -   Seguro     |
|                    |                | -   Universal  |
+--------------------+----------------+----------------+
| Word               | docx           | -   Editable   |
|                    |                | -   Universal  |
+--------------------+----------------+----------------+

: Ejemplo tabla cuadr√≠cula

## Tablas cuadr√≠cula: Alineaci√≥n {.title-top}

<br>

-   Las alineaciones se pueden especificar como con las tablas anteriores, colocando dos puntos en los l√≠mites de la l√≠nea de separaci√≥n despu√©s del encabezado:

```         
+--------------------+---------------+--------------------+
| Derecha            | Izquierda     | Centrado           |
+===================:+:==============+:==================:+
| Documento portable | pdf           | -  Seguro          |
+--------------------+---------------+--------------------+
```

. . .

<br>

-   Para tablas sin encabezado, los dos puntos van en la l√≠nea superior:

```         
+--------------:+:--------------+:------------------:+
| Derecha       | Izquierda     | Centrado           |
+---------------+---------------+--------------------+
```

## Tablas cuadr√≠cula: Creaci√≥n {.title-top}

<br>

::: incremental
-   Tengamos en cuenta que las tablas cuadr√≠cula son bastante complicadas de escribir con un editor de texto plano porque, a diferencia de las tablas comunes, los indicadores de columna deben alinearse.

<br>

-   ¬°El Editor Visual puede ayudar a crear estas tablas! para profundizar ver [Gu√≠a Quarto](https://quarto.org/docs/visual-editor/content.html#editing-tables)

<br>

-   Tambi√©n podemos utilizar herramientas online como [TablesGenerator](https://www.tablesgenerator.com/markdown_tables)
:::

## Tablas desde c√≥digo {.title-top}

<br>

El paquete **knitr** puede convertir las salidas de dataframes en tablas visuales con `knitr::kable()`:

<br>

```{r}
library(knitr)
library(datos)

head(pinguinos) |> 
  kable()
```

## Tablas desde c√≥digo {.title-top}

<br>

Existen numerosos paquetes para darle formato a las tablas producidas mediante c√≥digo. Un ejemplo de ello es el paquete **flextable**. La documentaci√≥n se encuentra en este [enlace](https://ardata-fr.github.io/flextable-book/)

<br>

```{r}
library(flextable)

head(pinguinos) |> 
flextable() |> 
fontsize(size = 26, part = "all") |> 
height_all(height = 1, part = "all", unit = "in") |> 
colformat_num(big.mark = "", decimal.mark = ",", digits = 2, na_str = "N/A") |>  
theme_zebra()
```

## Tablas desde c√≥digo {.title-top}

<br>

Otro paquete para tablas elaboradas es **gt**. Aqu√≠ podemos ver [todo lo que ofrece](https://gt.rstudio.com/).

<br>

```{r}
#| output-location: column-fragment

library(gt)

head(pinguinos) |> 
  gt() |>
 tab_options(table.font.size = 40) |> 
  tab_style(
    style = list(
      cell_fill(color = "pink"),
      cell_text(style = "italic")
      ),
    locations = cells_body(
      columns = largo_pico_mm,
      rows = largo_pico_mm > 40
    )
  )
```

## `r fontawesome::fa("laptop-code", "white")`Ô∏è Actividad 1 {background-color="#704b10" transition="slide-in"}

<br>

::: {.fragment .actividades}
-   dhtdhdh
:::

## F√≥rmulas {.title-top}

<br>

Al igual que en RMarkdown se puede insertar f√≥rmulas matem√°ticas Latex en linea o en imagen completa, utilizando \$ o \$\$ seg√∫n corresponda.

-   Este es un ejemplo de formula en linea $\sqrt{\frac{\alpha}{2}}$

``` markdown
\sqrt{\frac{\alpha}{2}}
```

<br>

-   La siguiente es una formula completa:

$$
R(t)= A \left(\frac{E_0}{\rho_0}\right)^{1/5}t^{2/5}
$$

## Caracteres especiales, emojis y listas de definiciones {.title-top}

![](images/tipos_0.webp){.absolute top="230" left="1050" width="600"}

<br>

En el modo Visual se pueden insertar facilmente caracteres especiales de distinto tipo, emojis y listas de t√©rminos. Por ejemplo:

<br>

Caracteres especiales:

‚ë° ‚âã ùÑû ‚çæ ‚ó¥ ‚≠Ü

<br>

Emojis:

üòÄ ü•∂ üëç ü§°

<br>

Listas de definici√≥n

**Clase** en programaci√≥n orientada a objetos

:   Es una plantilla que define las caracter√≠sticas y comportamientos de una entidad

## Art√≠culos cient√≠ficos {.title-top}

<br>

Quarto soporta la construcci√≥n de art√≠culos cient√≠ficos a trav√©s de plantillas preformateadas o personalizadas donde encontraremos:

::: incremental
-   un esquema estandarizado para autores que se puede expresar una vez en el documento fuente,

-   el uso de **Citation Style Language** (CSL) para automatizar el formato de citas y bibliograf√≠as,

-   herramientas de **RStudio** *modo Visual* para trabajar con **Zotero**, DOI's, CrossRef, DataCite, PubMed y archivos .bib,


-   salida a `pdf`, `html` y `docx` con formato personalizado,
:::

## Citas bibliogr√°ficas {.title-top}

![](images/DOI.jpg){.absolute top="600" left="720" width="450"}

<br>

Quarto utiliza la representaci√≥n de Mardown est√°ndar de Pandoc para las citas (por ejemplo [\@cita]): las citas van entre corchetes y est√°n separadas por punto y coma. Cada cita debe tener una clave, compuesta por "\@" + el identificador de la cita de la base de datos.


<br>

Pandoc le brinda el formato a las citas bibliograficas. De forma predeterminada, usa el formato autor-fecha del estilo Chicago, pero puede especificarse un formato personalizado utilizando **CSL** (Citation Style Language) en la cabecera YAML del documento.

## Citas bibliogr√°ficas {.title-top}


## `r fontawesome::fa("laptop-code", "white")`Ô∏è Actividad 2 {background-color="#704b10" transition="slide-in"}

<br>

::: {.fragment .actividades}
-   dhtdhdh
:::

## Opciones de c√≥digo de ejecuci√≥n {.title-top}

<br>

Algunas de las opciones de control de ejecuci√≥n de los chunck de c√≥digo.

::: {style="font-size: 1em"}
+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Opci√≥n    | Descripci√≥n                                                                                                                                                                                       |
+===========+===================================================================================================================================================================================================+
| `eval`    | Evalua el codigo del chunk (si es `false`, saltea el c√≥digo y no lo ejecuta).                                                                                                                     |
+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| `echo`    | Incluye el c√≥digo fuente en la salida                                                                                                                                                             |
+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| `output`  | Incluye el resultado de la ejecuci√≥n del c√≥digo en la salida (`true`, `false`, or `asis` para indicar que muestre los resultados en forma cruda).                                                 |
+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| `warning` | Gestiona las advertencias en la salida.                                                                                                                                                           |
+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| `error`   | Gestiona los errores en la salida.                                                                                                                                                                |
+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| `include` | Evita que se incluya cualquier salida (c√≥digo o resultados) (por ejemplo `include: false` suprime toda la salida del bloque de c√≥digo).                                                           |
+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| `message` | Gestiona los mensajes en la salida                                                                                                                                                                |
+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| `fig-*`   | Familia de opciones para las figuras (alto, ancho, alineaci√≥n, nombre, resoluci√≥n, etc)                                                                                                           |
+-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
:::

## C√≥digo destacado {.title-top}


## 



## Ejemplo: Gr√°ficos desde c√≥digo {.title-top auto-animate="true"}

<br>

:::: columns

::: {.column width="50%"}

```` markdown
```{{r}}
library(datos)
library(ggplot2)

pinguinos |> 
  ggplot(aes(x = largo_pico_mm,
                     y = alto_pico_mm,
                     col = isla)) +
  geom_point()
```
````
:::

::: {.column .fragment width="50%"}

```{r}
#| echo: false
library(datos)
library(ggplot2)

pinguinos |> 
  ggplot(aes(x = largo_pico_mm,
                     y = alto_pico_mm,
                     col = isla)) +
  geom_point() +
  theme_grey(base_size = 18)
```

:::

::::

## Ejemplo: Gr√°ficos desde c√≥digo {.title-top auto-animate="true"}

<br>

::: columns
::: {.column width="50%"}
```` markdown
```{{r}}
#| fig-width: 5
#| fig-height: 3

library(datos)
library(ggplot2)

pinguinos |> 
  ggplot(aes(x = largo_pico_mm,
                     y = alto_pico_mm,
                     col = isla)) +
  geom_point()
```
````
:::

::: {.column .fragment width="50%"}
```{r}
#| echo: false
#| fig-width: 5
#| fig-height: 3

library(datos)
library(ggplot2)

pinguinos |> 
  ggplot(aes(x = largo_pico_mm,
                     y = alto_pico_mm,
                     col = isla)) +
  geom_point() +
  theme_grey(base_size = 18)
```
:::
:::

## Ejemplo: Gr√°ficos desde c√≥digo {.title-top auto-animate="true"}

<br>

::: columns
::: {.column width="50%"}
```` markdown
```{{r}}
#| fig-width: 5
#| fig-height: 3
#| fig-cap: "Tama√±o de los ping√ºinos en 
tres islas del Archipelago Palmer."
#| fig-alt: "Diagrama de dispersi√≥n que 
muestra el tama√±o de los picos de los 
ping√ºinos en tres islas"

library(datos)
library(ggplot2)

pinguinos |> 
  ggplot(aes(x = largo_pico_mm,
                     y = alto_pico_mm,
                     col = isla)) +
  geom_point()
```
````
:::

::: {.column .fragment width="50%"}
```{r}
#| echo: false
#| fig-width: 5
#| fig-height: 3
#| fig-cap: "Tama√±o de los ping√ºinos en tres islas del Archipelago Palmer."
#| fig-alt: "Diagrama de dispersi√≥n que muestra el tama√±o de los picos de los ping√ºinos en tres islas"


library(datos)
library(ggplot2)

pinguinos |> 
  ggplot(aes(x = largo_pico_mm,
                     y = alto_pico_mm,
                     col = isla)) +
  geom_point()+
  theme_grey(base_size = 18)
```
:::
::::


## `r fontawesome::fa("laptop-code", "white")`Ô∏è Actividad 3 {background-color="#704b10" transition="slide-in"}

<br>

::: {.fragment .actividades}
-   dhtdhdh
:::